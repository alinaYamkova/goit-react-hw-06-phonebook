{"version":3,"sources":["redux/contacts/contacts-action.js","components/ContactForm/FormPhonebook.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js","components/ContactList/phonebook.module.css"],"names":["addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","filterContacts","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addNewContact","reset","alert","onSubmit","this","className","s","label","onChange","type","placeholder","input","btn","Component","connect","dispatch","contact","actions","showFilteredContacts","contacts","filter","normalizedFilter","toLowerCase","includes","items","onDeleteContact","map","list","text","btn_del","onClick","filterVal","onChangeFilter","ev","filter_label","filter_input","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.58b62dec.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n//було\r\n// const addContacts = data => ({\r\n//   type: SVGUnitTypes.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name: data.name,\r\n//     number: data.number\r\n//   },\r\n// });\r\n\r\n//стало\r\nconst addContact = createAction('contacts/addContacts', data => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number\r\n  },\r\n}));\r\n\r\n//було \r\n// deleteContact = (contactId) => {\r\n//   this.setState((prevState) => ({\r\n//     contacts: prevState.contacts.filter(\r\n//       (contact) => contact.id !== contactId\r\n//     ),\r\n//   }));\r\n// };\r\n\r\n//стало\r\nconst deleteContact = createAction('contacts/deleContacts');\r\nconst filterContacts = createAction('contacts/filterContacts');\r\n\r\nexport default { addContact, deleteContact, filterContacts };","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"../ContactList/phonebook.module.css\";\r\nimport actions from \"../../redux/contacts/contacts-action\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = this.state;\r\n    if ( name !== '' && value !== '') {\r\n      this.props.addNewContact(this.state);\r\n      this.reset();\r\n      return;\r\n    }\r\n    alert('Please, fill up the fields')\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              id={uuidv4()}\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"name\"\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              id={uuidv4()}\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              placeholder=\"number\"\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <button className={s.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addNewContact: (contact) => dispatch(actions.addContact(contact)),\r\n});\r\n    \r\nexport default connect(null, mapDispatchToProps) (ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../ContactList/phonebook.module.css\";\r\nimport actions from \"../../redux/contacts/contacts-action\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ol>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.list} key={id}>\r\n          <p className={s.text}>{name}, </p>\r\n          <p className={s.text}>tlf.: {number}</p>\r\n          <button\r\n            type=\"button\"\r\n            className={s.btn_del}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst showFilteredContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter((contact) =>\r\n     contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const {items, filter } = state.contacts;\r\n  return { \r\n    contacts: showFilteredContacts(items, filter) \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n    \r\nexport default connect(mapStateToProps,mapDispatchToProps) (ContactList);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux'\r\nimport s from \"../ContactList/phonebook.module.css\";\r\nimport actions from '../../redux/contacts/contacts-action';\r\n\r\nconst Filter = ({ filterVal, onChangeFilter  }) => (\r\n  <label className={s.filter_label}>\r\n    To make filter by Name\r\n    <input\r\n      className={s.filter_input}\r\n      type='text'\r\n      value={filterVal}\r\n      onChange={onChangeFilter }\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filterVal: PropTypes.string.isRequired,\r\n  onChangeFilter : PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterVal: state.contacts.filter,\r\n});\r\n\r\n//фыльтрування \r\n//  filteredContacts = (e) => {\r\n//   this.setState({ filter: e.target.value });\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (ev) => dispatch(actions.filterContacts(ev.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm/FormPhonebook\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\n\n// state = {\n  //     contacts: [\n  //       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //     ],\n  //     filter: '',\n  //   };\n\nconst App =() => {\n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux'\r\nimport actions from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, });\r\n","// import { createStore} from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reduser\";\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE,PERSIST, PURGE, REGISTER } from \"redux-persist\";\r\n \r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({ serializableCheck: \r\n    { ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER] }\r\n  }), logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n//реалізує запис в LocalStorage\r\nconst persistor = persistStore(store);\r\n\r\n\r\n\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/es/integration/react'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider loading={null} store={store.store}>\n      <PersistGate persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter> \n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"phonebook_btn__2b5mD\",\"btn_del\":\"phonebook_btn_del__QktYC\",\"label\":\"phonebook_label__3oO1y\",\"filter_label\":\"phonebook_filter_label__3Jteo\",\"input\":\"phonebook_input__I5WMY\",\"filter_input\":\"phonebook_filter_input__3EpPB\",\"title\":\"phonebook_title__2EpuQ\",\"text\":\"phonebook_text__1DMey\",\"list\":\"phonebook_list__2UeyS\"};"],"sourceRoot":""}